{"version":3,"sources":["components/ResumeForm/FormInputElement.js","components/ResumeForm/FromCollection.js","components/PDF/resume.js","components/ResumeForm/ResumeForm.js","App.js","reportWebVitals.js","index.js"],"names":["FormInputElement","props","id","label","handleChangeInput","event","handleChangeFunction","target","value","type","className","htmlFor","required","onChange","ClassName","toString","FormCollection","useState","userName","setName","userAge","setAge","userDescription","setDescription","userSkills","setUserSkills","userCourses","setUserCourses","userDetails","InputFields","change","name","age","desc","skills","courses","onSubmit","preventDefault","onGeneratePDF","map","ip","style","textDecoration","color","backgroundColor","fontSize","borderRadius","border","padding","margin","fontFamily","styles","StyleSheet","create","page","flexDirection","section","flexGrow","MyDocument","console","log","data","ResumeForm","setUserDetails","showResume","setShowResume","fileName","setFileName","document","blob","url","loading","error","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98f301e0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./InputElement.css\";\n\nconst FormInputElement = (props) => {\n  const id = \"id\" + props.label;\n  const handleChangeInput = (event) => {\n    props.handleChangeFunction(event.target.value);\n  };\n  if (props.type === \"text\" || props.type === \"number\") {\n    return (\n      <div className=\"input-field\">\n        <label className=\"input-label\" htmlFor={id}>\n          {props.label}\n        </label>\n        <input\n          id={id}\n          required={true}\n          value={props.value}\n          onChange={handleChangeInput}\n          type={props.type}\n          className={\"input-element \" + props.ClassName.toString()}\n        />\n      </div>\n    );\n  } else if (props.type === \"textArea\") {\n    return (\n      <div className=\"input-field\">\n        <label className=\"input-label\" htmlFor={id}>{props.label}</label>\n        <textarea\n          id={id}\n          value={props.value}\n          onChange={handleChangeInput}\n          // className={\"input-element \" + props.ClassName.toString()}\n        ></textarea>\n      </div>\n    );\n  }\n  else{\n    // return <p>This is else</p>\n    return null;\n  }\n  // return (\n  //   <div className=\"input-field\">\n  //     <label className=\"input-label\" htmlFor={id}>\n  //       {props.label}\n  //     </label>\n  //     {(props.type === \"text\" || props.type === \"number\") && (\n  //       <input\n  //         id={id}\n  //         required={true}\n  //         value={props.value}\n  //         onChange={handleChangeInput}\n  //         type={props.type}\n  //         className={\"input-element \" + props.ClassName.toString()}\n  //       />\n  //     )}\n  //     {props.type === \"textArea\" && (\n  //       <textarea\n  //         id={id}\n  //         value={props.value}\n  //         onChange={handleChangeInput}\n  //         ClassName={\"input-element \" + props.ClassName.toString()}\n  //       ></textarea>\n  //     )}\n  //   </div>\n  // );\n};\nexport default FormInputElement;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport FormInputElement from \"./FormInputElement\";\nimport \"./FormCollection.css\"\nconst FormCollection = (props) => {\n  const [userName, setName] = useState(\"\");\n  const [userAge, setAge] = useState(\"\");\n  const [userDescription, setDescription] = useState(\"\");\n  const [userEducation, setUserEducation] = useState([]);\n  const [userSkills, setUserSkills] = useState([]);\n  const [userExperience, setUserExperience] = useState([]);\n  const [userProjects, setUserProjects] = useState([]);\n  const [userCourses, setUserCourses] = useState([]);\n\n  let userDetails = {};\n\n  const handleNameChange = (name) => {\n    setName(name);\n  };\n  const hangdleAgeChange = (age) => {\n    setAge(age);\n  };\n  const handelDescriptionChange = (desc) => {\n    setDescription(desc);\n  };\n  const handleEducationChange = (education) =>{\n    setUserEducation(education);\n  }\n  const handleExperienceChange = (exp) =>{\n    setUserExperience(exp);\n  }\n  const handleUserProjects = (projs) =>{\n    setUserProjects(projs);\n  }\n  const handleUserCourses = (courses) =>{\n    setUserCourses(courses);\n  }\n  const handleUserSkills = (skills) =>{\n    setUserSkills(skills);\n  }\n  \n  const InputFields = [\n    {label:\"Name\", value:userName, type:\"text\", ClassName:\"name\", change:handleNameChange},\n    {label:\"Age\", value:userAge ,type:\"number\", ClassName:\"age\", change:hangdleAgeChange},\n    {label:\"Career Objective\", value:userDescription, type:\"textArea\", ClassName:\"obj\", change:handelDescriptionChange},\n    // {label:\"Education\", value:userEducation, type:\"Custom\", ClassName:\"education\", change:handleEducationChange},\n    {label:\"Skills\", value:userSkills, type:\"textArea\", ClassName:\"skills\",change:handleUserSkills},\n    // {label:\"Project\", value:userProjects, type:\"Custom\", ClassName:\"projects\", change:handleUserProjects},\n    // {label:\"Experience\", value:userExperience, type:\"Custom\", ClassName:\"exp\", change:handleExperienceChange},\n    {label:\"Courses\", value:userCourses, type:\"textArea\", ClassName:\"courses\", change:handleUserCourses}\n  ];\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n    userDetails = {\n      ...userDetails,\n      name: userName,\n      age: userAge,\n      desc: userDescription,\n      skills:userSkills,\n      courses:userCourses,\n    };\n    props.onGeneratePDF(userDetails);\n    setName(\"\");\n    setDescription(\"\");\n    setAge(\"\");\n    setUserSkills(\"\");\n    setUserCourses(\"\");\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmitForm}>\n        <h2 className=\"heading\">Resume Form</h2>\n        <hr className=\"rule\"></hr>\n        {\n          InputFields.map((ip) =>{\n              return <FormInputElement\n              key={ip.label}\n              label={ip.label}\n              handleChangeFunction={ip.change}\n              value={ip.value}\n              type={ip.type}\n              ClassName={ip.ClassName}\n            />\n          })\n        }\n        {/* <FormInputElement\n          label=\"Name\"\n          handleChangeFunction={handleNameChange}\n          value={userName}\n        />\n        <FormInputElement\n          label=\"Age\"\n          handleChangeFunction={hangdleAgeChange}\n          value={userAge}\n        />\n        <FormInputElement\n          label=\"Description\"\n          handleChangeFunction={handelDescriptionChange}\n          value={userDescription}\n        /> */}\n        <div className=\"grid-center\">\n        <button type=\"submit\" style={{\n            textDecoration: \"none\",\n            color: \"#4a4a4a\",\n            backgroundColor: \"white\",\n            fontSize:\"0.8rem\",\n            borderRadius:\"6px\",\n            border:\"none\",\n            padding:\"8px\",\n            margin:'12px',\n            fontFamily:\"'Open Sans', sans-serif\"\n          }}>Generate PDF</button>\n          </div>\n      </form>\n    </div>\n  );\n};\nexport default FormCollection;\n","import React from \"react\";\nimport { Document, Page, Text, View, StyleSheet } from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\n// Create Document Component\nconst MyDocument = (props) => {\n    console.log(props.data);\n    return (\n        <Document>\n            <Page style={styles.page}>\n            {props.data ? <View>\n                <Text>Name: {props.data[\"name\"]}</Text>\n                <Text>Age: {props.data[\"age\"]}</Text>\n                <Text>Description: {props.data[\"desc\"]}</Text>\n                <Text>Skills: {props.data[\"skills\"]}</Text>\n                <Text>Courses and Certifications: {props.data[\"courses\"]}</Text>\n            </View>\n          : \" \" }\n            </Page>\n        </Document>\n    );\n}\nexport default MyDocument;\n","import React from \"react\";\nimport FormCollection from \"./FromCollection\";\nimport { PDFViewer, PDFDownloadLink} from \"@react-pdf/renderer\";\nimport { useState } from \"react\";\nimport MyDocument from \"../PDF/resume\";\nimport \"./resumeForm.css\";\n\nconst ResumeForm = (props) => {\n  const [userDetails, setUserDetails] = useState({});\n  const [showResume, setShowResume] = useState(true);\n  const [fileName, setFileName] = useState(\"resume.pdf\");\n  const HandleGenerateInput = (userDetails) => {\n    setUserDetails(userDetails);\n    setShowResume(true);\n    setFileName(\"Resume\" + userDetails['name'].toString() +\".pdf\");\n  };\n  return (\n    <div className=\"resume-form\">\n      <FormCollection onGeneratePDF={HandleGenerateInput} />\n      {showResume && (\n        <PDFViewer className=\"pdfViewer\">\n          <MyDocument data={userDetails} />\n        </PDFViewer>\n      )}\n      {showResume && \n        <PDFDownloadLink\n          document={<MyDocument data={userDetails} />}\n          fileName={fileName}\n          className=\"grid-center\"\n          style={{\n            textDecoration: \"none\",\n            color: \"#4a4a4a\",\n            backgroundColor: \"white\",\n            fontSize:\"0.8rem\",\n            borderRadius:\"6px\",\n            border:\"none\",\n            padding:\"8px\",\n            margin:'12px',\n          }}\n        >\n          {({ blob, url, loading, error }) =>\n            loading ? \"Loading document...\" : \"Download Pdf\"\n          }\n        </PDFDownloadLink>\n      }\n    </div>\n  );\n};\nexport default ResumeForm;\n","import ResumeForm from './components/ResumeForm/ResumeForm'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ResumeForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}